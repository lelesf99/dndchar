{"version":3,"sources":["components/Button/index.jsx","img/Logo.png","components/FormContainer/index.jsx","components/SignupForm/index.jsx","routes/Signup/index.jsx"],"names":["Button","props","undefined","href","submit","id","className","type","disabled","onClick","e","preventDefault","children","pageLink","to","FormContainer","logo","src","alt","SignupForm","useState","userName","setUserName","email","setEmail","password","setPassword","passRepeat","setPassRepeat","success","setSuccess","check","class","userNameValidation","setUserNameValidation","emailValidation","setEmailValidation","passwordValidation","setPasswordValidation","passRepeatValidation","setPassRepeatValidation","passwordMeter","setPasswordMeter","errorMessage","errorClass","result","setResult","loading","setloading","handleInputChange","target","value","checked","name","useEffect","text","level","str","length","search","getPasswordLevel","onSubmit","onChange","placeholder","autoComplete","htmlFor","validCheck","data","xhr","XMLHttpRequest","open","setRequestHeader","onreadystatechange","this","readyState","DONE","res","response","JSON","parse","error","console","log","code","send","stringify","Login"],"mappings":"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","file":"static/js/5.1bc2d865.chunk.js","sourcesContent":["import './style.css'\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Button(props) {\r\n    if (props.href === undefined) {\r\n        if (props.submit) {\r\n            return (\r\n                <button\r\n                    id={props.id}\r\n                    className={`btn ${props.className !== undefined ? props.className : \"\"}`}\r\n                    type=\"submit\"\r\n                    disabled={props.disabled ? \"disabled\" : \"\"}\r\n                    onClick={props.submit !== undefined ? (e) => { e.preventDefault(); props.submit(); } : () => { return null }}>\r\n                    {props.children}\r\n                </button >\r\n            );\r\n        } else {\r\n            return (\r\n                <button\r\n                    id={props.id}\r\n                    className={`btn ${props.className !== undefined ? props.className : \"\"}`}\r\n                    type=\"button\"\r\n                    disabled={props.disabled ? \"disabled\" : \"\"}\r\n                    onClick={props.onClick !== undefined ? () => props.onClick() : () => { return null }}>\r\n                    {props.children}\r\n                </button >\r\n            );\r\n        }\r\n    }\r\n    else if (props.pageLink) {\r\n        return (\r\n            <Link\r\n                to={props.href}\r\n                id={props.id}\r\n                className={`btn ${props.className !== undefined ? props.className : \"\"}`}\r\n            >\r\n                {props.children}\r\n            </Link>\r\n        );\r\n    } else {\r\n        return (\r\n            <a\r\n                id={props.id}\r\n                className={`btn ${props.className !== undefined ? props.className : \"\"}`}\r\n                href={props.href}\r\n                onClick={props.onClick !== undefined ? () => props.onClick() : () => { return null }}>\r\n                {props.children}\r\n            </a >\r\n        );\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/Logo.609ee845.png\";","import './style.css';\r\nimport logo from '../../img/Logo.png';\r\nimport React from 'react';\r\n\r\nexport default function FormContainer(props) {\r\n    return (\r\n        <div className={`form-container ${props.className !== undefined ? props.className : \"\"}`}>\r\n            {props.logo\r\n                ? <div className=\"logo\"><img src={logo} alt=\"\" /></div>\r\n                : null}\r\n            {props.children}\r\n        </div>\r\n    );\r\n}","import './style.css';\r\nimport Button from '../Button';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { AiOutlineLoading3Quarters } from 'react-icons/ai';\r\n\r\nfunction getPasswordLevel(str) {\r\n    let level = 0;\r\n    if (str.length >= 6) {\r\n        if (str.search(/[a-z]/g) !== -1) level++;\r\n        if (str.search(/[A-Z]/g) !== -1) level++;\r\n        if (str.search(/([0-9])/g) !== -1) level++;\r\n        if (str.search(/([^A-Za-z0-9])/g) !== -1) level++;\r\n    };\r\n    return level;\r\n}\r\n\r\nexport default function SignupForm() {\r\n\r\n    const [userName, setUserName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [passRepeat, setPassRepeat] = useState(\"\");\r\n    const [success, setSuccess] = useState(\"Voltar\");\r\n\r\n    const [userNameValidation, setUserNameValidation] = useState({\r\n        check: -1,\r\n        class: \"\"\r\n    });\r\n    const [emailValidation, setEmailValidation] = useState({\r\n        check: -1,\r\n        class: \"\"\r\n    });\r\n    const [passwordValidation, setPasswordValidation] = useState({\r\n        check: -1,\r\n        class: \"\"\r\n    });\r\n    const [passRepeatValidation, setPassRepeatValidation] = useState({\r\n        check: -1,\r\n        class: \"\"\r\n    });\r\n\r\n    const [passwordMeter, setPasswordMeter] = useState(0);\r\n\r\n\r\n    const [result, setResult] = useState({\r\n        errorMessage: \"\",\r\n        errorClass: \"\"\r\n    });\r\n\r\n    const [loading, setloading] = useState(false);\r\n\r\n\r\n    function handleInputChange(e) {\r\n\r\n        const target = e.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        switch (name) {\r\n            case \"userName\":\r\n                setUserName(value);\r\n                break;\r\n            case \"email\":\r\n                setEmail(value);\r\n                break;\r\n            case \"password\":\r\n                setPassword(value);\r\n                break;\r\n            case \"passRepeat\":\r\n                setPassRepeat(value);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (userName === \"\") {\r\n            setUserNameValidation({\r\n                check: -1,\r\n                class: \"\"\r\n            });\r\n        } else {\r\n            setUserNameValidation({\r\n                check: 1,\r\n                class: \"\"\r\n            });\r\n        }\r\n    }, [userName]);\r\n    useEffect(() => {\r\n        if (email === \"\") {\r\n            setEmailValidation({\r\n                check: -1,\r\n                text: \"\"\r\n            });\r\n        } else {\r\n            setEmailValidation({\r\n                check: 1,\r\n                class: \"\"\r\n            });\r\n        }\r\n    }, [email]);\r\n    useEffect(() => {\r\n\r\n        let level = getPasswordLevel(password);\r\n\r\n        setPasswordMeter(level);\r\n        if (password === \"\") {\r\n            setPasswordValidation({\r\n                check: -1,\r\n                class: \"\"\r\n            });\r\n        } else if (level === 0) {\r\n            setPasswordValidation({\r\n                check: -3,\r\n                class: \"\"\r\n            });\r\n        } else if (passRepeat !== password) {\r\n            setPasswordValidation({\r\n                check: -2,\r\n                class: \"\"\r\n            });\r\n        } else {\r\n            setPasswordValidation({\r\n                check: 1,\r\n                class: \"\"\r\n            });\r\n        }\r\n    }, [password, passRepeat]);\r\n\r\n    useEffect(() => {\r\n        if (passRepeat === \"\") {\r\n            setPassRepeatValidation({\r\n                check: -1,\r\n                class: \"\"\r\n            });\r\n        } else if (passRepeat !== password) {\r\n            setPassRepeatValidation({\r\n                check: -2,\r\n                class: \"\"\r\n            });\r\n        } else {\r\n            setPassRepeatValidation({\r\n                check: 1,\r\n                class: \"\"\r\n            });\r\n        }\r\n    }, [passRepeat, password]);\r\n    function submitBtn() {\r\n        // Validação formulário\r\n        let validCheck = true;\r\n        setloading(true);\r\n\r\n        if (userNameValidation.check === -1) {\r\n            setUserNameValidation({\r\n                check: -1,\r\n                class: \"fail\"\r\n            });\r\n            setResult({\r\n                errorMessage: \"Preencha os campos destacados\",\r\n                errorClass: \"fail\"\r\n            })\r\n            validCheck = false;\r\n        }\r\n        if (emailValidation.check === -1) {\r\n            setEmailValidation({\r\n                check: -1,\r\n                class: \"fail\"\r\n            });\r\n            setResult({\r\n                errorMessage: \"Preencha os campos destacados\",\r\n                errorClass: \"fail\"\r\n            })\r\n            validCheck = false;\r\n        }\r\n        if (passwordValidation.check === -1) {\r\n            setPasswordValidation({\r\n                check: -1,\r\n                class: \"fail\"\r\n            });\r\n            setResult({\r\n                errorMessage: \"Preencha os campos destacados\",\r\n                errorClass: \"fail\"\r\n            })\r\n            validCheck = false;\r\n        } else if (passwordValidation.check === -2) {\r\n            setPasswordValidation({\r\n                check: -1,\r\n                class: \"fail\"\r\n            });\r\n            setResult({\r\n                errorMessage: \"As senhas não são iguais!\",\r\n                errorClass: \"fail\"\r\n            })\r\n            validCheck = false;\r\n        } else if (passwordValidation.check === -3) {\r\n            setPasswordValidation({\r\n                check: -1,\r\n                class: \"fail\"\r\n            });\r\n            setResult({\r\n                errorMessage: \"Senha muito fraca!\",\r\n                errorClass: \"fail\"\r\n            })\r\n            validCheck = false;\r\n        }\r\n        if (passRepeatValidation.check === -1) {\r\n            setPassRepeatValidation({\r\n                check: -1,\r\n                class: \"fail\"\r\n            });\r\n            setResult({\r\n                errorMessage: \"Preencha os campos destacados\",\r\n                errorClass: \"fail\"\r\n            })\r\n            validCheck = false;\r\n        } else if (passRepeatValidation.check === -2) {\r\n            setPassRepeatValidation({\r\n                check: -1,\r\n                class: \"fail\"\r\n            });\r\n            setResult({\r\n                errorMessage: \"As senhas não são iguais!\",\r\n                errorClass: \"fail\"\r\n            })\r\n            validCheck = false;\r\n        }\r\n        if (!validCheck) {\r\n            setloading(false);\r\n            return;\r\n        }\r\n        const data = {\r\n            userName: userName,\r\n            email: email,\r\n            password: password\r\n        }\r\n        var xhr = new XMLHttpRequest();\r\n\r\n        xhr.open(\"POST\", 'https://us-central1-dndchar-143e9.cloudfunctions.net/newUser');\r\n\r\n        xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n\r\n        xhr.onreadystatechange = function () { // Call a function when the state changes.\r\n            if (this.readyState === XMLHttpRequest.DONE) {\r\n                let res = this.response\r\n                try {\r\n                    res = JSON.parse(this.response);\r\n                } catch (error) {\r\n                    console.error(error);\r\n                }\r\n\r\n                console.log(res);\r\n                setloading(false);\r\n                switch (res.code) {\r\n                    case \"auth/email-already-exists\":\r\n                        setResult({\r\n                            errorMessage: \"Email já utilizado!\",\r\n                            errorClass: \"fail\"\r\n                        });\r\n                        setEmailValidation({\r\n                            check: -1,\r\n                            class: \"fail\"\r\n                        });\r\n                        break;\r\n\r\n                    case \"auth/invalid-email\":\r\n                        setResult({\r\n                            errorMessage: \"Email inválido!\",\r\n                            errorClass: \"fail\"\r\n                        });\r\n                        setEmailValidation({\r\n                            check: -1,\r\n                            class: \"fail\"\r\n                        });\r\n                        break;\r\n\r\n                    case \"auth/weak-password\":\r\n                        setResult({\r\n                            errorMessage: \"Senha muito fraca!\",\r\n                            errorClass: \"fail\"\r\n                        });\r\n                        setPasswordValidation({\r\n                            check: -1,\r\n                            class: \"fail\"\r\n                        });\r\n                        break;\r\n                    case \"auth/uid-already-exists\":\r\n                        setResult({\r\n                            errorMessage: \"Nome de usuário já utilizado\",\r\n                            errorClass: \"fail\"\r\n                        });\r\n                        setUserNameValidation({\r\n                            check: -1,\r\n                            class: \"fail\"\r\n                        });\r\n                        break;\r\n                    case \"db/add-doc-error\":\r\n                        setResult({\r\n                            errorMessage: \"Algo deu errado!\",\r\n                            errorClass: \"fail\"\r\n                        });\r\n                        break;\r\n\r\n                    case undefined:\r\n                        setResult({\r\n                            errorMessage: \"Cadastro realizado!\",\r\n                            errorClass: \"success\"\r\n                        });\r\n                        setSuccess(\"Entrar\")\r\n                        break;\r\n                    default:\r\n                        setResult({\r\n                            errorMessage: \"Algo deu errado!\",\r\n                            errorClass: \"fail\"\r\n                        });\r\n                }\r\n            } else {\r\n                setloading(false);\r\n            }\r\n        }\r\n        xhr.send(JSON.stringify(data));\r\n    }\r\n\r\n    return (\r\n        <form className=\"form\" onSubmit={() => { return false }}>\r\n\r\n            <input onChange={(e) => handleInputChange(e)} className={`input ${userNameValidation.class}`} value={userName} name=\"userName\" type=\"text\" placeholder=\"Nome de usuário\" />\r\n            <input onChange={(e) => handleInputChange(e)} className={`input ${emailValidation.class}`} value={email} name=\"email\" type=\"email\" placeholder=\"E-mail\" autoComplete=\"email\" />\r\n            <div className=\"new-password-wrapper\">\r\n                <input onChange={(e) => handleInputChange(e)} id=\"passwordInput\" className={`input ${passwordValidation.class}`} value={password} name=\"password\" type=\"password\" placeholder=\"Senha\" autoComplete=\"new-password\" />\r\n                <label htmlFor=\"passwordInput\" className={`password-meter-msg level${passwordMeter}`}></label>\r\n                <label htmlFor=\"passwordInput\" className={`password-meter level${passwordMeter}`}></label>\r\n            </div>\r\n            <input onChange={(e) => handleInputChange(e)} className={`input ${passRepeatValidation.class}`} value={passRepeat} name=\"passRepeat\" type=\"password\" autoComplete=\"\" placeholder=\"Confirme sua senha\" />\r\n\r\n            <div className=\"button-group\">\r\n                <Button submit={submitBtn} disabled={loading} className={loading ? \"signup loading-form\" : \"signup\"}><AiOutlineLoading3Quarters /> <span>Cadastrar</span></Button>\r\n                <Button href=\"/\" className=\"sec\" pageLink={true}>{success}</Button>\r\n            </div>\r\n            <div className={`result ${result.errorClass}`}>{result.errorMessage}</div>\r\n        </form>\r\n\r\n    );\r\n}\r\n","import FormContainer from '../../components/FormContainer';\r\nimport SignupForm from '../../components/SignupForm';\r\nimport React from 'react';\r\n\r\nexport default function Login() {\r\n    return (\r\n        <FormContainer logo={false}>\r\n            <SignupForm></SignupForm>\r\n        </FormContainer>\r\n\r\n    );\r\n}"],"sourceRoot":""}