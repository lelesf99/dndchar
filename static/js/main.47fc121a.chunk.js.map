{"version":3,"sources":["App.jsx","reportWebVitals.js","index.js"],"names":["initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","Login","lazy","Signup","Profile","CharBuilder","Home","App","useState","user","setUser","dragData","setDragData","currTarget","setCurrTarget","isDragging","setIsDragging","getData","e","target","setData","onAuthStateChanged","className","onMouseDown","onMouseMove","onMouseUp","onTouchStart","onTouchMove","document","elementFromPoint","touches","clientX","clientY","onTouchEnd","fallback","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"+OAqBAA,YAVuB,CACrBC,OAAQ,0CACRC,WAAY,gCACZC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,gBACnBC,MAAO,+CAKT,IAAMC,EAAOC,cAEPC,EAAQC,gBAAK,kBAAM,gCACnBC,EAASD,gBAAK,kBAAM,sDACpBE,EAAUF,gBAAK,kBAAM,sDACrBG,EAAcH,gBAAK,kBAAM,gCACzBI,EAAOJ,gBAAK,kBAAM,gCA0DTK,MAxDf,WAEE,MAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgCF,mBAAS,MAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAoCJ,mBAAS,MAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAAoCN,oBAAS,GAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KAkBA,SAASC,EAAQC,GACfN,EAAYM,EAAEC,QACdH,GAAc,GAGhB,SAASI,EAAQF,GACfF,GAAc,GAGhB,OAzBAK,YAAmBtB,GAAM,SAACU,GAItBC,EAAQD,MAsBV,sBAAKa,UAAU,MACbC,YAAa,SAACL,GAAD,OAAOD,EAAQC,IAC5BM,YAAa,SAACN,GAAYH,GAAcG,EAAEC,SAAWN,GAAYC,EAAcI,EAAEC,SACjFM,UAAW,SAACP,GAAD,OAAOE,KAClBM,aAAc,SAACR,GAAD,OAAOD,EAAQC,IAC7BS,YAAa,SAACT,GAAYH,GAAca,SAASC,iBAAiBX,EAAEY,QAAQ,GAAGC,QAASb,EAAEY,QAAQ,GAAGE,WAAanB,GAAYC,EAAcc,SAASC,iBAAiBX,EAAEY,QAAQ,GAAGC,QAASb,EAAEY,QAAQ,GAAGE,WACzMC,WAAY,SAACf,GAAD,OAAOE,KANrB,UAQE,cAAC,WAAD,CAAUc,SAAU,qBAAKZ,UAAU,YAAnC,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOa,KAAK,IAAIC,QAAS,cAACnC,EAAD,CAAOQ,KAAMA,MACtC,cAAC,IAAD,CAAO0B,KAAK,SAASC,QAAS,cAACjC,EAAD,MAC9B,eAAC,IAAD,CAAOgC,KAAK,OAAOC,QAAS,cAAChC,EAAD,CAASK,KAAMA,IAA3C,UACE,cAAC,IAAD,CAAO0B,KAAK,GAAGC,QAAS,cAAC9B,EAAD,CAAMG,KAAMA,MACpC,cAAC,IAAD,CAAO0B,KAAK,cAAcC,QAAS,cAAC/B,EAAD,CAAaI,KAAMA,EAAMM,WAAYA,EAAYJ,SAAUA,EAAUE,WAAYA,cAI1H,cAAC,IAAD,QCrESwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFnB,SAASoB,eAAe,SAO1BX,M","file":"static/js/main.47fc121a.chunk.js","sourcesContent":["import './css/App.css';\nimport React, { Suspense, lazy, useState } from 'react';\nimport { Routes, Route, Outlet, } from 'react-router-dom';\nimport { onAuthStateChanged, getAuth } from 'firebase/auth';\n\n// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA4DrYIu5wkZ6Z24y2JFB-7PWPcjwuX6PU\",\n  authDomain: \"dndchar-143e9.firebaseapp.com\",\n  projectId: \"dndchar-143e9\",\n  storageBucket: \"dndchar-143e9.appspot.com\",\n  messagingSenderId: \"1077981407053\",\n  appId: \"1:1077981407053:web:99afc6ea1df4005a90f904\"\n};\n\n// Initialize Firebase\ninitializeApp(firebaseConfig);\nconst auth = getAuth();\n\nconst Login = lazy(() => import('./routes/Login'));\nconst Signup = lazy(() => import('./routes/Signup'));\nconst Profile = lazy(() => import('./routes/Profile'));\nconst CharBuilder = lazy(() => import('./routes/CharBuilder'));\nconst Home = lazy(() => import('./routes/Home'));\n\nfunction App() {\n\n  const [user, setUser] = useState(null);\n  const [dragData, setDragData] = useState(null);\n  const [currTarget, setCurrTarget] = useState(null);\n  const [isDragging, setIsDragging] = useState(false);\n\n  onAuthStateChanged(auth, (user) => {\n    if (user) {\n      // User is signed in, see docs for a list of available properties\n      // https://firebase.google.com/docs/reference/js/firebase.User\n      setUser(user);\n      // ...\n    } else {\n      // User is signed out\n      setUser(user);\n    }\n  });\n\n  // useEffect(() => {\n  //   console.log(isDragging, currTarget, dragData);\n  // }, [dragData, currTarget]);\n\n  function getData(e) {\n    setDragData(e.target);\n    setIsDragging(true);\n  }\n\n  function setData(e) {\n    setIsDragging(false);\n  }\n\n  return (\n    <div className='App'\n      onMouseDown={(e) => getData(e)}\n      onMouseMove={(e) => { if (isDragging && e.target !== currTarget) setCurrTarget(e.target) }}\n      onMouseUp={(e) => setData(e)}\n      onTouchStart={(e) => getData(e)}\n      onTouchMove={(e) => { if (isDragging && document.elementFromPoint(e.touches[0].clientX, e.touches[0].clientY) !== currTarget) setCurrTarget(document.elementFromPoint(e.touches[0].clientX, e.touches[0].clientY)) }}\n      onTouchEnd={(e) => setData(e)}\n    >\n      <Suspense fallback={<div className=\"loading\"></div>}>\n        <Routes>\n          <Route path=\"/\" element={<Login user={user}></Login>} />\n          <Route path=\"signup\" element={<Signup></Signup>} />\n          <Route path=\":uid\" element={<Profile user={user}></Profile>} >\n            <Route path=\"\" element={<Home user={user}></Home>} />\n            <Route path=\"CharBuilder\" element={<CharBuilder user={user} isDragging={isDragging} dragData={dragData} currTarget={currTarget}></CharBuilder>} />\n          </Route>\n        </Routes>\n      </Suspense>\n      <Outlet />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}